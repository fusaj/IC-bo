/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from "@tanstack/react-router";

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as DashboardImport } from "./routes/dashboard";
import { Route as TasksIndexImport } from "./routes/tasks.index";
import { Route as ArchivosIndexImport } from "./routes/archivos.index";
import { Route as TasksIdImport } from "./routes/tasks.$id";

// Create Virtual Routes

const IndexLazyImport = createFileRoute("/")();

// Create/Update Routes

const DashboardRoute = DashboardImport.update({
  path: "/dashboard",
  getParentRoute: () => rootRoute,
} as any);

const IndexLazyRoute = IndexLazyImport.update({
  path: "/",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/index.lazy").then((d) => d.Route));

const TasksIndexRoute = TasksIndexImport.update({
  path: "/tasks/",
  getParentRoute: () => rootRoute,
} as any);

const ArchivosIndexRoute = ArchivosIndexImport.update({
  path: "/archivos/",
  getParentRoute: () => rootRoute,
} as any);

const TasksIdRoute = TasksIdImport.update({
  path: "/tasks/$id",
  getParentRoute: () => rootRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof IndexLazyImport;
      parentRoute: typeof rootRoute;
    };
    "/dashboard": {
      id: "/dashboard";
      path: "/dashboard";
      fullPath: "/dashboard";
      preLoaderRoute: typeof DashboardImport;
      parentRoute: typeof rootRoute;
    };
    "/tasks/$id": {
      id: "/tasks/$id";
      path: "/tasks/$id";
      fullPath: "/tasks/$id";
      preLoaderRoute: typeof TasksIdImport;
      parentRoute: typeof rootRoute;
    };
    "/archivos/": {
      id: "/archivos/";
      path: "/archivos";
      fullPath: "/archivos";
      preLoaderRoute: typeof ArchivosIndexImport;
      parentRoute: typeof rootRoute;
    };
    "/tasks/": {
      id: "/tasks/";
      path: "/tasks";
      fullPath: "/tasks";
      preLoaderRoute: typeof TasksIndexImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  DashboardRoute,
  TasksIdRoute,
  ArchivosIndexRoute,
  TasksIndexRoute,
});

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dashboard",
        "/tasks/$id",
        "/archivos/",
        "/tasks/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard.tsx"
    },
    "/tasks/$id": {
      "filePath": "tasks.$id.tsx"
    },
    "/archivos/": {
      "filePath": "archivos.index.tsx"
    },
    "/tasks/": {
      "filePath": "tasks.index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
